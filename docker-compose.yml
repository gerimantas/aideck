
version: '3.9'

services:
  backend:
    build: ./aideck/backend
    container_name: aideck-backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./aideck:/app/aideck
    environment:
      - PYTHONPATH=/app

  frontend:
    build: ./aideck/frontend
    container_name: aideck-frontend
    ports:
      - "3000:3000"

  db:
    image: postgres:15
    container_name: aideck-db
    restart: always
    environment:
      POSTGRES_USER: aideck
      POSTGRES_PASSWORD: aideck
      POSTGRES_DB: aideck
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: aideck-redis
    ports:
      - "6379:6379"


  celery:
    build: ./aideck/backend
    container_name: aideck-celery
    command: celery -A workers.tasks_worker worker --loglevel=info
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      - redis
      - db
    volumes:
      - ./aideck:/app/aideck
  prometheus:
    image: prom/prometheus:latest
    container_name: aideck-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./frontend:/app

  grafana:
    image: grafana/grafana:latest
    container_name: aideck-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/var/lib/grafana

volumes:
  pgdata:
